"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/vimeo-video-element";
exports.ids = ["vendor-chunks/vimeo-video-element"];
exports.modules = {

/***/ "(ssr)/./node_modules/vimeo-video-element/dist/react.js":
/*!********************************************************!*\
  !*** ./node_modules/vimeo-video-element/dist/react.js ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ react_default)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var _vimeo_video_element_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./vimeo-video-element.js */ \"(ssr)/./node_modules/vimeo-video-element/dist/vimeo-video-element.js\");\n\"use client\";\n\n// dist/react.ts\n\n\n\n// ../../node_modules/ce-la-react/dist/ce-la-react.js\nvar reservedReactProps = /* @__PURE__ */ new Set([\n  \"style\",\n  \"children\",\n  \"ref\",\n  \"key\",\n  \"suppressContentEditableWarning\",\n  \"suppressHydrationWarning\",\n  \"dangerouslySetInnerHTML\"\n]);\nvar reactPropToAttrNameMap = {\n  className: \"class\",\n  htmlFor: \"for\"\n};\nfunction defaultToAttributeName(propName) {\n  return propName.toLowerCase();\n}\nfunction defaultToAttributeValue(propValue) {\n  if (typeof propValue === \"boolean\") return propValue ? \"\" : void 0;\n  if (typeof propValue === \"function\") return void 0;\n  if (typeof propValue === \"object\" && propValue !== null) return void 0;\n  return propValue;\n}\nfunction createComponent({\n  react: React2,\n  tagName,\n  elementClass,\n  events,\n  displayName,\n  defaultProps,\n  toAttributeName = defaultToAttributeName,\n  toAttributeValue = defaultToAttributeValue\n}) {\n  const IS_REACT_19_OR_NEWER = Number.parseInt(React2.version) >= 19;\n  const ReactComponent = React2.forwardRef((props, ref) => {\n    var _a, _b;\n    const elementRef = React2.useRef(null);\n    const prevElemPropsRef = React2.useRef(/* @__PURE__ */ new Map());\n    const eventProps = {};\n    const attrs = {};\n    const reactProps = {};\n    const elementProps = {};\n    for (const [k, v] of Object.entries(props)) {\n      if (reservedReactProps.has(k)) {\n        reactProps[k] = v;\n        continue;\n      }\n      const attrName = toAttributeName(reactPropToAttrNameMap[k] ?? k);\n      if (elementClass.prototype && k in elementClass.prototype && !(k in (((_a = globalThis.HTMLElement) == null ? void 0 : _a.prototype) ?? {})) && !((_b = elementClass.observedAttributes) == null ? void 0 : _b.some((attr) => attr === attrName))) {\n        elementProps[k] = v;\n        continue;\n      }\n      if (k.startsWith(\"on\")) {\n        eventProps[k] = v;\n        continue;\n      }\n      const attrValue = toAttributeValue(v);\n      if (attrName && attrValue != null) {\n        attrs[attrName] = String(attrValue);\n        if (!IS_REACT_19_OR_NEWER) {\n          reactProps[attrName] = attrValue;\n        }\n      }\n      if (attrName && IS_REACT_19_OR_NEWER) {\n        const attrValueFromDefault = defaultToAttributeValue(v);\n        if (attrValue !== attrValueFromDefault) {\n          reactProps[attrName] = attrValue;\n        } else {\n          reactProps[attrName] = v;\n        }\n      }\n    }\n    if (typeof window !== \"undefined\") {\n      for (const propName in eventProps) {\n        const callback = eventProps[propName];\n        const useCapture = propName.endsWith(\"Capture\");\n        const eventName = ((events == null ? void 0 : events[propName]) ?? propName.slice(2).toLowerCase()).slice(\n          0,\n          useCapture ? -7 : void 0\n        );\n        React2.useLayoutEffect(() => {\n          const eventTarget = elementRef == null ? void 0 : elementRef.current;\n          if (!eventTarget || typeof callback !== \"function\") return;\n          eventTarget.addEventListener(eventName, callback, useCapture);\n          return () => {\n            eventTarget.removeEventListener(eventName, callback, useCapture);\n          };\n        }, [elementRef == null ? void 0 : elementRef.current, callback]);\n      }\n      React2.useLayoutEffect(() => {\n        if (elementRef.current === null) return;\n        const newElemProps = /* @__PURE__ */ new Map();\n        for (const key in elementProps) {\n          setProperty(elementRef.current, key, elementProps[key]);\n          prevElemPropsRef.current.delete(key);\n          newElemProps.set(key, elementProps[key]);\n        }\n        for (const [key, _value] of prevElemPropsRef.current) {\n          setProperty(elementRef.current, key, void 0);\n        }\n        prevElemPropsRef.current = newElemProps;\n      });\n    }\n    if (typeof window === \"undefined\" && (elementClass == null ? void 0 : elementClass.getTemplateHTML) && (elementClass == null ? void 0 : elementClass.shadowRootOptions)) {\n      const { mode, delegatesFocus } = elementClass.shadowRootOptions;\n      const templateShadowRoot = React2.createElement(\"template\", {\n        shadowrootmode: mode,\n        shadowrootdelegatesfocus: delegatesFocus,\n        dangerouslySetInnerHTML: {\n          __html: elementClass.getTemplateHTML(attrs, props)\n        }\n      });\n      reactProps.children = [templateShadowRoot, reactProps.children];\n    }\n    return React2.createElement(tagName, {\n      ...defaultProps,\n      ...reactProps,\n      ref: React2.useCallback(\n        (node) => {\n          elementRef.current = node;\n          if (typeof ref === \"function\") {\n            ref(node);\n          } else if (ref !== null) {\n            ref.current = node;\n          }\n        },\n        [ref]\n      )\n    });\n  });\n  ReactComponent.displayName = displayName ?? elementClass.name;\n  return ReactComponent;\n}\nfunction setProperty(node, name, value) {\n  var _a;\n  node[name] = value;\n  if (value == null && name in (((_a = globalThis.HTMLElement) == null ? void 0 : _a.prototype) ?? {})) {\n    node.removeAttribute(name);\n  }\n}\n\n// dist/react.ts\nvar react_default = createComponent({\n  react: react__WEBPACK_IMPORTED_MODULE_0__,\n  tagName: \"vimeo-video\",\n  elementClass: _vimeo_video_element_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n  toAttributeName(propName) {\n    if (propName === \"muted\") return \"\";\n    if (propName === \"defaultMuted\") return \"muted\";\n    return defaultToAttributeName(propName);\n  }\n});\n\n/*! Bundled license information:\n\nce-la-react/dist/ce-la-react.js:\n  (**\n   * @license\n   * Copyright 2018 Google LLC\n   * SPDX-License-Identifier: BSD-3-Clause\n   *\n   * Modified version of `@lit/react` for vanilla custom elements with support for SSR.\n   *)\n*/\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/vimeo-video-element/dist/react.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/vimeo-video-element/dist/vimeo-video-element.js":
/*!**********************************************************************!*\
  !*** ./node_modules/vimeo-video-element/dist/vimeo-video-element.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ vimeo_video_element_default)\n/* harmony export */ });\n/* harmony import */ var _vimeo_player_dist_player_es_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @vimeo/player/dist/player.es.js */ \"(ssr)/./node_modules/@vimeo/player/dist/player.es.js\");\n\nconst EMBED_BASE = \"https://player.vimeo.com/video\";\nconst MATCH_SRC = /vimeo\\.com\\/(?:video\\/|event\\/)?(\\d+)(?:\\/([\\w-]+))?/;\nfunction getTemplateHTML(attrs, props = {}) {\n  const iframeAttrs = {\n    src: serializeIframeUrl(attrs, props),\n    frameborder: 0,\n    width: \"100%\",\n    height: \"100%\",\n    allow: \"accelerometer; fullscreen; autoplay; encrypted-media; gyroscope; picture-in-picture\"\n  };\n  if (props.config) {\n    iframeAttrs[\"data-config\"] = JSON.stringify(props.config);\n  }\n  return (\n    /*html*/\n    `\n    <style>\n      :host {\n        display: inline-block;\n        min-width: 300px;\n        min-height: 150px;\n        position: relative;\n      }\n      iframe {\n        position: absolute;\n        top: 0;\n        left: 0;\n      }\n      :host(:not([controls])) {\n        pointer-events: none;\n      }\n    </style>\n    <iframe${serializeAttributes(iframeAttrs)}></iframe>\n  `\n  );\n}\nfunction serializeIframeUrl(attrs, props) {\n  if (!attrs.src) return;\n  const matches = attrs.src.match(MATCH_SRC);\n  const srcId = matches && matches[1];\n  const hParam = matches && matches[2];\n  const params = {\n    // ?controls=true is enabled by default in the iframe\n    controls: attrs.controls === \"\" ? null : 0,\n    autoplay: attrs.autoplay,\n    loop: attrs.loop,\n    muted: attrs.muted,\n    playsinline: attrs.playsinline,\n    preload: attrs.preload ?? \"metadata\",\n    transparent: false,\n    autopause: attrs.autopause,\n    h: hParam,\n    // This param is required when the video is Unlisted.\n    ...props.config\n  };\n  return `${EMBED_BASE}/${srcId}?${serialize(params)}`;\n}\nclass VimeoVideoElement extends (globalThis.HTMLElement ?? class {\n}) {\n  static getTemplateHTML = getTemplateHTML;\n  static shadowRootOptions = { mode: \"open\" };\n  static observedAttributes = [\n    \"autoplay\",\n    \"controls\",\n    \"crossorigin\",\n    \"loop\",\n    \"muted\",\n    \"playsinline\",\n    \"poster\",\n    \"preload\",\n    \"src\"\n  ];\n  loadComplete = new PublicPromise();\n  #loadRequested;\n  #hasLoaded;\n  #isInit;\n  #currentTime = 0;\n  #duration = NaN;\n  #muted = false;\n  #paused = !this.autoplay;\n  #playbackRate = 1;\n  #progress = 0;\n  #readyState = 0;\n  #seeking = false;\n  #volume = 1;\n  #videoWidth = NaN;\n  #videoHeight = NaN;\n  #config = null;\n  constructor() {\n    super();\n    this.#upgradeProperty(\"config\");\n  }\n  requestFullscreen() {\n    var _a, _b;\n    return (_b = (_a = this.api) == null ? void 0 : _a.requestFullscreen) == null ? void 0 : _b.call(_a);\n  }\n  exitFullscreen() {\n    var _a, _b;\n    return (_b = (_a = this.api) == null ? void 0 : _a.exitFullscreen) == null ? void 0 : _b.call(_a);\n  }\n  requestPictureInPicture() {\n    var _a, _b;\n    return (_b = (_a = this.api) == null ? void 0 : _a.requestPictureInPicture) == null ? void 0 : _b.call(_a);\n  }\n  exitPictureInPicture() {\n    var _a, _b;\n    return (_b = (_a = this.api) == null ? void 0 : _a.exitPictureInPicture) == null ? void 0 : _b.call(_a);\n  }\n  get config() {\n    return this.#config;\n  }\n  set config(value) {\n    this.#config = value;\n  }\n  async load() {\n    var _a;\n    if (this.#loadRequested) return;\n    const isFirstLoad = !this.#hasLoaded;\n    if (this.#hasLoaded) this.loadComplete = new PublicPromise();\n    this.#hasLoaded = true;\n    await (this.#loadRequested = Promise.resolve());\n    this.#loadRequested = null;\n    this.#currentTime = 0;\n    this.#duration = NaN;\n    this.#muted = false;\n    this.#paused = !this.autoplay;\n    this.#playbackRate = 1;\n    this.#progress = 0;\n    this.#readyState = 0;\n    this.#seeking = false;\n    this.#volume = 1;\n    this.#readyState = 0;\n    this.#videoWidth = NaN;\n    this.#videoHeight = NaN;\n    this.dispatchEvent(new Event(\"emptied\"));\n    let oldApi = this.api;\n    this.api = null;\n    if (!this.src) {\n      return;\n    }\n    this.dispatchEvent(new Event(\"loadstart\"));\n    const options = {\n      autoplay: this.autoplay,\n      controls: this.controls,\n      loop: this.loop,\n      muted: this.defaultMuted,\n      playsinline: this.playsInline,\n      preload: this.preload ?? \"metadata\",\n      transparent: false,\n      autopause: this.hasAttribute(\"autopause\"),\n      ...this.#config\n    };\n    const onLoaded = async () => {\n      this.#readyState = 1;\n      this.dispatchEvent(new Event(\"loadedmetadata\"));\n      if (this.api) {\n        this.#muted = await this.api.getMuted();\n        this.#volume = await this.api.getVolume();\n        this.dispatchEvent(new Event(\"volumechange\"));\n        this.#duration = await this.api.getDuration();\n        this.dispatchEvent(new Event(\"durationchange\"));\n      }\n      this.dispatchEvent(new Event(\"loadcomplete\"));\n      this.loadComplete.resolve();\n    };\n    if (this.#isInit) {\n      this.api = oldApi;\n      await this.api.loadVideo({\n        ...options,\n        url: this.src\n      });\n      await onLoaded();\n      await this.loadComplete;\n      return;\n    }\n    this.#isInit = true;\n    let iframe = (_a = this.shadowRoot) == null ? void 0 : _a.querySelector(\"iframe\");\n    if (isFirstLoad && iframe) {\n      this.#config = JSON.parse(iframe.getAttribute(\"data-config\") || \"{}\");\n    }\n    if (!this.shadowRoot) {\n      this.attachShadow({ mode: \"open\" });\n      this.shadowRoot.innerHTML = getTemplateHTML(namedNodeMapToObject(this.attributes), this);\n      iframe = this.shadowRoot.querySelector(\"iframe\");\n    }\n    this.api = new _vimeo_player_dist_player_es_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](iframe);\n    const onceLoaded = () => {\n      this.api.off(\"loaded\", onceLoaded);\n      onLoaded();\n    };\n    this.api.on(\"loaded\", onceLoaded);\n    this.api.on(\"bufferstart\", () => {\n      if (this.#paused) {\n        this.#paused = false;\n        this.dispatchEvent(new Event(\"play\"));\n      }\n      this.dispatchEvent(new Event(\"waiting\"));\n    });\n    this.api.on(\"play\", () => {\n      if (!this.#paused) return;\n      this.#paused = false;\n      this.dispatchEvent(new Event(\"play\"));\n    });\n    this.api.on(\"playing\", () => {\n      this.#readyState = 3;\n      this.#paused = false;\n      this.dispatchEvent(new Event(\"playing\"));\n    });\n    this.api.on(\"seeking\", () => {\n      this.#seeking = true;\n      this.dispatchEvent(new Event(\"seeking\"));\n    });\n    this.api.on(\"seeked\", () => {\n      this.#seeking = false;\n      this.dispatchEvent(new Event(\"seeked\"));\n    });\n    this.api.on(\"pause\", () => {\n      this.#paused = true;\n      this.dispatchEvent(new Event(\"pause\"));\n    });\n    this.api.on(\"ended\", () => {\n      this.#paused = true;\n      this.dispatchEvent(new Event(\"ended\"));\n    });\n    this.api.on(\"ratechange\", ({ playbackRate }) => {\n      this.#playbackRate = playbackRate;\n      this.dispatchEvent(new Event(\"ratechange\"));\n    });\n    this.api.on(\"volumechange\", async ({ volume }) => {\n      this.#volume = volume;\n      if (this.api) {\n        this.#muted = await this.api.getMuted();\n      }\n      this.dispatchEvent(new Event(\"volumechange\"));\n    });\n    this.api.on(\"durationchange\", ({ duration }) => {\n      this.#duration = duration;\n      this.dispatchEvent(new Event(\"durationchange\"));\n    });\n    this.api.on(\"timeupdate\", ({ seconds }) => {\n      this.#currentTime = seconds;\n      this.dispatchEvent(new Event(\"timeupdate\"));\n    });\n    this.api.on(\"progress\", ({ seconds }) => {\n      this.#progress = seconds;\n      this.dispatchEvent(new Event(\"progress\"));\n    });\n    this.api.on(\"resize\", ({ videoWidth, videoHeight }) => {\n      this.#videoWidth = videoWidth;\n      this.#videoHeight = videoHeight;\n      this.dispatchEvent(new Event(\"resize\"));\n    });\n    await this.loadComplete;\n  }\n  async attributeChangedCallback(attrName, oldValue, newValue) {\n    if (oldValue === newValue) return;\n    switch (attrName) {\n      case \"autoplay\":\n      case \"controls\":\n      case \"src\": {\n        this.load();\n        return;\n      }\n    }\n    await this.loadComplete;\n    switch (attrName) {\n      case \"loop\": {\n        this.api.setLoop(this.loop);\n        break;\n      }\n    }\n  }\n  async play() {\n    var _a;\n    this.#paused = false;\n    this.dispatchEvent(new Event(\"play\"));\n    await this.loadComplete;\n    try {\n      await ((_a = this.api) == null ? void 0 : _a.play());\n    } catch (error) {\n      this.#paused = true;\n      this.dispatchEvent(new Event(\"pause\"));\n      throw error;\n    }\n  }\n  async pause() {\n    var _a;\n    await this.loadComplete;\n    return (_a = this.api) == null ? void 0 : _a.pause();\n  }\n  get ended() {\n    return this.#currentTime >= this.#duration;\n  }\n  get seeking() {\n    return this.#seeking;\n  }\n  get readyState() {\n    return this.#readyState;\n  }\n  get videoWidth() {\n    return this.#videoWidth;\n  }\n  get videoHeight() {\n    return this.#videoHeight;\n  }\n  get src() {\n    return this.getAttribute(\"src\");\n  }\n  set src(val) {\n    if (this.src == val) return;\n    this.setAttribute(\"src\", val);\n  }\n  get paused() {\n    return this.#paused;\n  }\n  get duration() {\n    return this.#duration;\n  }\n  get autoplay() {\n    return this.hasAttribute(\"autoplay\");\n  }\n  set autoplay(val) {\n    if (this.autoplay == val) return;\n    this.toggleAttribute(\"autoplay\", Boolean(val));\n  }\n  get buffered() {\n    if (this.#progress > 0) {\n      return createTimeRanges(0, this.#progress);\n    }\n    return createTimeRanges();\n  }\n  get controls() {\n    return this.hasAttribute(\"controls\");\n  }\n  set controls(val) {\n    if (this.controls == val) return;\n    this.toggleAttribute(\"controls\", Boolean(val));\n  }\n  get currentTime() {\n    return this.#currentTime;\n  }\n  set currentTime(val) {\n    if (this.currentTime == val) return;\n    this.#currentTime = val;\n    this.loadComplete.then(() => {\n      var _a;\n      (_a = this.api) == null ? void 0 : _a.setCurrentTime(val).catch(() => {\n      });\n    });\n  }\n  get defaultMuted() {\n    return this.hasAttribute(\"muted\");\n  }\n  set defaultMuted(val) {\n    if (this.defaultMuted == val) return;\n    this.toggleAttribute(\"muted\", Boolean(val));\n  }\n  get loop() {\n    return this.hasAttribute(\"loop\");\n  }\n  set loop(val) {\n    if (this.loop == val) return;\n    this.toggleAttribute(\"loop\", Boolean(val));\n  }\n  get muted() {\n    return this.#muted;\n  }\n  set muted(val) {\n    if (this.muted == val) return;\n    this.#muted = val;\n    this.loadComplete.then(() => {\n      var _a;\n      (_a = this.api) == null ? void 0 : _a.setMuted(val).catch(() => {\n      });\n    });\n  }\n  get playbackRate() {\n    return this.#playbackRate;\n  }\n  set playbackRate(val) {\n    if (this.playbackRate == val) return;\n    this.#playbackRate = val;\n    this.loadComplete.then(() => {\n      var _a;\n      (_a = this.api) == null ? void 0 : _a.setPlaybackRate(val).catch(() => {\n      });\n    });\n  }\n  get playsInline() {\n    return this.hasAttribute(\"playsinline\");\n  }\n  set playsInline(val) {\n    if (this.playsInline == val) return;\n    this.toggleAttribute(\"playsinline\", Boolean(val));\n  }\n  get poster() {\n    return this.getAttribute(\"poster\");\n  }\n  set poster(val) {\n    if (this.poster == val) return;\n    this.setAttribute(\"poster\", `${val}`);\n  }\n  get volume() {\n    return this.#volume;\n  }\n  set volume(val) {\n    if (this.volume == val) return;\n    this.#volume = val;\n    this.loadComplete.then(() => {\n      var _a;\n      (_a = this.api) == null ? void 0 : _a.setVolume(val).catch(() => {\n      });\n    });\n  }\n  // This is a pattern to update property values that are set before\n  // the custom element is upgraded.\n  // https://web.dev/custom-elements-best-practices/#make-properties-lazy\n  #upgradeProperty(prop) {\n    if (Object.prototype.hasOwnProperty.call(this, prop)) {\n      const value = this[prop];\n      delete this[prop];\n      this[prop] = value;\n    }\n  }\n}\nfunction serializeAttributes(attrs) {\n  let html = \"\";\n  for (const key in attrs) {\n    const value = attrs[key];\n    if (value === \"\") html += ` ${escapeHtml(key)}`;\n    else html += ` ${escapeHtml(key)}=\"${escapeHtml(`${value}`)}\"`;\n  }\n  return html;\n}\nfunction escapeHtml(str) {\n  return str.replace(/&/g, \"&amp;\").replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\").replace(/\"/g, \"&quot;\").replace(/'/g, \"&apos;\").replace(/`/g, \"&#x60;\");\n}\nfunction serialize(props) {\n  return String(new URLSearchParams(boolToBinary(props)));\n}\nfunction boolToBinary(props) {\n  let p = {};\n  for (let key in props) {\n    let val = props[key];\n    if (val === true || val === \"\") p[key] = 1;\n    else if (val === false) p[key] = 0;\n    else if (val != null) p[key] = val;\n  }\n  return p;\n}\nfunction namedNodeMapToObject(namedNodeMap) {\n  let obj = {};\n  for (let attr of namedNodeMap) {\n    obj[attr.name] = attr.value;\n  }\n  return obj;\n}\nclass PublicPromise extends Promise {\n  constructor(executor = () => {\n  }) {\n    let res, rej;\n    super((resolve, reject) => {\n      executor(resolve, reject);\n      res = resolve;\n      rej = reject;\n    });\n    this.resolve = res;\n    this.reject = rej;\n  }\n}\nfunction createTimeRanges(start, end) {\n  if (Array.isArray(start)) {\n    return createTimeRangesObj(start);\n  } else if (start == null || end == null || start === 0 && end === 0) {\n    return createTimeRangesObj([[0, 0]]);\n  }\n  return createTimeRangesObj([[start, end]]);\n}\nfunction createTimeRangesObj(ranges) {\n  Object.defineProperties(ranges, {\n    start: {\n      value: (i) => ranges[i][0]\n    },\n    end: {\n      value: (i) => ranges[i][1]\n    }\n  });\n  return ranges;\n}\nif (globalThis.customElements && !globalThis.customElements.get(\"vimeo-video\")) {\n  globalThis.customElements.define(\"vimeo-video\", VimeoVideoElement);\n}\nvar vimeo_video_element_default = VimeoVideoElement;\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvdmltZW8tdmlkZW8tZWxlbWVudC9kaXN0L3ZpbWVvLXZpZGVvLWVsZW1lbnQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBNkQ7QUFDN0Q7QUFDQTtBQUNBLDBDQUEwQztBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCLFlBQVksVUFBVSxpQkFBaUIsV0FBVztBQUM3RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSxpQ0FBaUM7QUFDOUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLFdBQVcsR0FBRyxNQUFNLEdBQUcsa0JBQWtCO0FBQ3JEO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQSwrQkFBK0I7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFD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QkFBc0Isd0JBQXdCLHdCQUF3Qix3QkFBd0I7QUFDcko7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUdFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbmV4dGpzLy4vbm9kZV9tb2R1bGVzL3ZpbWVvLXZpZGVvLWVsZW1lbnQvZGlzdC92aW1lby12aWRlby1lbGVtZW50LmpzP2M4YzMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFZpbWVvUGxheWVyQVBJIGZyb20gXCJAdmltZW8vcGxheWVyL2Rpc3QvcGxheWVyLmVzLmpzXCI7XG5jb25zdCBFTUJFRF9CQVNFID0gXCJodHRwczovL3BsYXllci52aW1lby5jb20vdmlkZW9cIjtcbmNvbnN0IE1BVENIX1NSQyA9IC92aW1lb1xcLmNvbVxcLyg/OnZpZGVvXFwvfGV2ZW50XFwvKT8oXFxkKykoPzpcXC8oW1xcdy1dKykpPy87XG5mdW5jdGlvbiBnZXRUZW1wbGF0ZUhUTUwoYXR0cnMsIHByb3BzID0ge30pIHtcbiAgY29uc3QgaWZyYW1lQXR0cnMgPSB7XG4gICAgc3JjOiBzZXJpYWxpemVJZnJhbWVVcmwoYXR0cnMsIHByb3BzKSxcbiAgICBmcmFtZWJvcmRlcjogMCxcbiAgICB3aWR0aDogXCIxMDAlXCIsXG4gICAgaGVpZ2h0OiBcIjEwMCVcIixcbiAgICBhbGxvdzogXCJhY2NlbGVyb21ldGVyOyBmdWxsc2NyZWVuOyBhdXRvcGxheTsgZW5jcnlwdGVkLW1lZGlhOyBneXJvc2NvcGU7IHBpY3R1cmUtaW4tcGljdHVyZVwiXG4gIH07XG4gIGlmIChwcm9wcy5jb25maWcpIHtcbiAgICBpZnJhbWVBdHRyc1tcImRhdGEtY29uZmlnXCJdID0gSlNPTi5zdHJpbmdpZnkocHJvcHMuY29uZmlnKTtcbiAgfVxuICByZXR1cm4gKFxuICAgIC8qaHRtbCovXG4gICAgYFxuICAgIDxzdHlsZT5cbiAgICAgIDpob3N0IHtcbiAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgICBtaW4td2lkdGg6IDMwMHB4O1xuICAgICAgICBtaW4taGVpZ2h0OiAxNTBweDtcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgfVxuICAgICAgaWZyYW1lIHtcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICB0b3A6IDA7XG4gICAgICAgIGxlZnQ6IDA7XG4gICAgICB9XG4gICAgICA6aG9zdCg6bm90KFtjb250cm9sc10pKSB7XG4gICAgICAgIHBvaW50ZXItZXZlbnRzOiBub25lO1xuICAgICAgfVxuICAgIDwvc3R5bGU+XG4gICAgPGlmcmFtZSR7c2VyaWFsaXplQXR0cmlidXRlcyhpZnJhbWVBdHRycyl9PjwvaWZyYW1lPlxuICBgXG4gICk7XG59XG5mdW5jdGlvbiBzZXJpYWxpemVJZnJhbWVVcmwoYXR0cnMsIHByb3BzKSB7XG4gIGlmICghYXR0cnMuc3JjKSByZXR1cm47XG4gIGNvbnN0IG1hdGNoZXMgPSBhdHRycy5zcmMubWF0Y2goTUFUQ0hfU1JDKTtcbiAgY29uc3Qgc3JjSWQgPSBtYXRjaGVzICYmIG1hdGNoZXNbMV07XG4gIGNvbnN0IGhQYXJhbSA9IG1hdGNoZXMgJiYgbWF0Y2hlc1syXTtcbiAgY29uc3QgcGFyYW1zID0ge1xuICAgIC8vID9jb250cm9scz10cnVlIGlzIGVuYWJsZWQgYnkgZGVmYXVsdCBpbiB0aGUgaWZyYW1lXG4gICAgY29udHJvbHM6IGF0dHJzLmNvbnRyb2xzID09PSBcIlwiID8gbnVsbCA6IDAsXG4gICAgYXV0b3BsYXk6IGF0dHJzLmF1dG9wbGF5LFxuICAgIGxvb3A6IGF0dHJzLmxvb3AsXG4gICAgbXV0ZWQ6IGF0dHJzLm11dGVkLFxuICAgIHBsYXlzaW5saW5lOiBhdHRycy5wbGF5c2lubGluZSxcbiAgICBwcmVsb2FkOiBhdHRycy5wcmVsb2FkID8/IFwibWV0YWRhdGFcIixcbiAgICB0cmFuc3BhcmVudDogZmFsc2UsXG4gICAgYXV0b3BhdXNlOiBhdHRycy5hdXRvcGF1c2UsXG4gICAgaDogaFBhcmFtLFxuICAgIC8vIFRoaXMgcGFyYW0gaXMgcmVxdWlyZWQgd2hlbiB0aGUgdmlkZW8gaXMgVW5saXN0ZWQuXG4gICAgLi4ucHJvcHMuY29uZmlnXG4gIH07XG4gIHJldHVybiBgJHtFTUJFRF9CQVNFfS8ke3NyY0lkfT8ke3NlcmlhbGl6ZShwYXJhbXMpfWA7XG59XG5jbGFzcyBWaW1lb1ZpZGVvRWxlbWVudCBleHRlbmRzIChnbG9iYWxUaGlzLkhUTUxFbGVtZW50ID8/IGNsYXNzIHtcbn0pIHtcbiAgc3RhdGljIGdldFRlbXBsYXRlSFRNTCA9IGdldFRlbXBsYXRlSFRNTDtcbiAgc3RhdGljIHNoYWRvd1Jvb3RPcHRpb25zID0geyBtb2RlOiBcIm9wZW5cIiB9O1xuICBzdGF0aWMgb2JzZXJ2ZWRBdHRyaWJ1dGVzID0gW1xuICAgIFwiYXV0b3BsYXlcIixcbiAgICBcImNvbnRyb2xzXCIsXG4gICAgXCJjcm9zc29yaWdpblwiLFxuICAgIFwibG9vcFwiLFxuICAgIFwibXV0ZWRcIixcbiAgICBcInBsYXlzaW5saW5lXCIsXG4gICAgXCJwb3N0ZXJcIixcbiAgICBcInByZWxvYWRcIixcbiAgICBcInNyY1wiXG4gIF07XG4gIGxvYWRDb21wbGV0ZSA9IG5ldyBQdWJsaWNQcm9taXNlKCk7XG4gICNsb2FkUmVxdWVzdGVkO1xuICAjaGFzTG9hZGVkO1xuICAjaXNJbml0O1xuICAjY3VycmVudFRpbWUgPSAwO1xuICAjZHVyYXRpb24gPSBOYU47XG4gICNtdXRlZCA9IGZhbHNlO1xuICAjcGF1c2VkID0gIXRoaXMuYXV0b3BsYXk7XG4gICNwbGF5YmFja1JhdGUgPSAxO1xuICAjcHJvZ3Jlc3MgPSAwO1xuICAjcmVhZHlTdGF0ZSA9IDA7XG4gICNzZWVraW5nID0gZmFsc2U7XG4gICN2b2x1bWUgPSAxO1xuICAjdmlkZW9XaWR0aCA9IE5hTjtcbiAgI3ZpZGVvSGVpZ2h0ID0gTmFOO1xuICAjY29uZmlnID0gbnVsbDtcbiAgY29uc3RydWN0b3IoKSB7XG4gICAgc3VwZXIoKTtcbiAgICB0aGlzLiN1cGdyYWRlUHJvcGVydHkoXCJjb25maWdcIik7XG4gIH1cbiAgcmVxdWVzdEZ1bGxzY3JlZW4oKSB7XG4gICAgdmFyIF9hLCBfYjtcbiAgICByZXR1cm4gKF9iID0gKF9hID0gdGhpcy5hcGkpID09IG51bGwgPyB2b2lkIDAgOiBfYS5yZXF1ZXN0RnVsbHNjcmVlbikgPT0gbnVsbCA/IHZvaWQgMCA6IF9iLmNhbGwoX2EpO1xuICB9XG4gIGV4aXRGdWxsc2NyZWVuKCkge1xuICAgIHZhciBfYSwgX2I7XG4gICAgcmV0dXJuIChfYiA9IChfYSA9IHRoaXMuYXBpKSA9PSBudWxsID8gdm9pZCAwIDogX2EuZXhpdEZ1bGxzY3JlZW4pID09IG51bGwgPyB2b2lkIDAgOiBfYi5jYWxsKF9hKTtcbiAgfVxuICByZXF1ZXN0UGljdHVyZUluUGljdHVyZSgpIHtcbiAgICB2YXIgX2EsIF9iO1xuICAgIHJldHVybiAoX2IgPSAoX2EgPSB0aGlzLmFwaSkgPT0gbnVsbCA/IHZvaWQgMCA6IF9hLnJlcXVlc3RQaWN0dXJlSW5QaWN0dXJlKSA9PSBudWxsID8gdm9pZCAwIDogX2IuY2FsbChfYSk7XG4gIH1cbiAgZXhpdFBpY3R1cmVJblBpY3R1cmUoKSB7XG4gICAgdmFyIF9hLCBfYjtcbiAgICByZXR1cm4gKF9iID0gKF9hID0gdGhpcy5hcGkpID09IG51bGwgPyB2b2lkIDAgOiBfYS5leGl0UGljdHVyZUluUGljdHVyZSkgPT0gbnVsbCA/IHZvaWQgMCA6IF9iLmNhbGwoX2EpO1xuICB9XG4gIGdldCBjb25maWcoKSB7XG4gICAgcmV0dXJuIHRoaXMuI2NvbmZpZztcbiAgfVxuICBzZXQgY29uZmlnKHZhbHVlKSB7XG4gICAgdGhpcy4jY29uZmlnID0gdmFsdWU7XG4gIH1cbiAgYXN5bmMgbG9hZCgpIHtcbiAgICB2YXIgX2E7XG4gICAgaWYgKHRoaXMuI2xvYWRSZXF1ZXN0ZWQpIHJldHVybjtcbiAgICBjb25zdCBpc0ZpcnN0TG9hZCA9ICF0aGlzLiNoYXNMb2FkZWQ7XG4gICAgaWYgKHRoaXMuI2hhc0xvYWRlZCkgdGhpcy5sb2FkQ29tcGxldGUgPSBuZXcgUHVibGljUHJvbWlzZSgpO1xuICAgIHRoaXMuI2hhc0xvYWRlZCA9IHRydWU7XG4gICAgYXdhaXQgKHRoaXMuI2xvYWRSZXF1ZXN0ZWQgPSBQcm9taXNlLnJlc29sdmUoKSk7XG4gICAgdGhpcy4jbG9hZFJlcXVlc3RlZCA9IG51bGw7XG4gICAgdGhpcy4jY3VycmVudFRpbWUgPSAwO1xuICAgIHRoaXMuI2R1cmF0aW9uID0gTmFOO1xuICAgIHRoaXMuI211dGVkID0gZmFsc2U7XG4gICAgdGhpcy4jcGF1c2VkID0gIXRoaXMuYXV0b3BsYXk7XG4gICAgdGhpcy4jcGxheWJhY2tSYXRlID0gMTtcbiAgICB0aGlzLiNwcm9ncmVzcyA9IDA7XG4gICAgdGhpcy4jcmVhZHlTdGF0ZSA9IDA7XG4gICAgdGhpcy4jc2Vla2luZyA9IGZhbHNlO1xuICAgIHRoaXMuI3ZvbHVtZSA9IDE7XG4gICAgdGhpcy4jcmVhZHlTdGF0ZSA9IDA7XG4gICAgdGhpcy4jdmlkZW9XaWR0aCA9IE5hTjtcbiAgICB0aGlzLiN2aWRlb0hlaWdodCA9IE5hTjtcbiAgICB0aGlzLmRpc3BhdGNoRXZlbnQobmV3IEV2ZW50KFwiZW1wdGllZFwiKSk7XG4gICAgbGV0IG9sZEFwaSA9IHRoaXMuYXBpO1xuICAgIHRoaXMuYXBpID0gbnVsbDtcbiAgICBpZiAoIXRoaXMuc3JjKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIHRoaXMuZGlzcGF0Y2hFdmVudChuZXcgRXZlbnQoXCJsb2Fkc3RhcnRcIikpO1xuICAgIGNvbnN0IG9wdGlvbnMgPSB7XG4gICAgICBhdXRvcGxheTogdGhpcy5hdXRvcGxheSxcbiAgICAgIGNvbnRyb2xzOiB0aGlzLmNvbnRyb2xzLFxuICAgICAgbG9vcDogdGhpcy5sb29wLFxuICAgICAgbXV0ZWQ6IHRoaXMuZGVmYXVsdE11dGVkLFxuICAgICAgcGxheXNpbmxpbmU6IHRoaXMucGxheXNJbmxpbmUsXG4gICAgICBwcmVsb2FkOiB0aGlzLnByZWxvYWQgPz8gXCJtZXRhZGF0YVwiLFxuICAgICAgdHJhbnNwYXJlbnQ6IGZhbHNlLFxuICAgICAgYXV0b3BhdXNlOiB0aGlzLmhhc0F0dHJpYnV0ZShcImF1dG9wYXVzZVwiKSxcbiAgICAgIC4uLnRoaXMuI2NvbmZpZ1xuICAgIH07XG4gICAgY29uc3Qgb25Mb2FkZWQgPSBhc3luYyAoKSA9PiB7XG4gICAgICB0aGlzLiNyZWFkeVN0YXRlID0gMTtcbiAgICAgIHRoaXMuZGlzcGF0Y2hFdmVudChuZXcgRXZlbnQoXCJsb2FkZWRtZXRhZGF0YVwiKSk7XG4gICAgICBpZiAodGhpcy5hcGkpIHtcbiAgICAgICAgdGhpcy4jbXV0ZWQgPSBhd2FpdCB0aGlzLmFwaS5nZXRNdXRlZCgpO1xuICAgICAgICB0aGlzLiN2b2x1bWUgPSBhd2FpdCB0aGlzLmFwaS5nZXRWb2x1bWUoKTtcbiAgICAgICAgdGhpcy5kaXNwYXRjaEV2ZW50KG5ldyBFdmVudChcInZvbHVtZWNoYW5nZVwiKSk7XG4gICAgICAgIHRoaXMuI2R1cmF0aW9uID0gYXdhaXQgdGhpcy5hcGkuZ2V0RHVyYXRpb24oKTtcbiAgICAgICAgdGhpcy5kaXNwYXRjaEV2ZW50KG5ldyBFdmVudChcImR1cmF0aW9uY2hhbmdlXCIpKTtcbiAgICAgIH1cbiAgICAgIHRoaXMuZGlzcGF0Y2hFdmVudChuZXcgRXZlbnQoXCJsb2FkY29tcGxldGVcIikpO1xuICAgICAgdGhpcy5sb2FkQ29tcGxldGUucmVzb2x2ZSgpO1xuICAgIH07XG4gICAgaWYgKHRoaXMuI2lzSW5pdCkge1xuICAgICAgdGhpcy5hcGkgPSBvbGRBcGk7XG4gICAgICBhd2FpdCB0aGlzLmFwaS5sb2FkVmlkZW8oe1xuICAgICAgICAuLi5vcHRpb25zLFxuICAgICAgICB1cmw6IHRoaXMuc3JjXG4gICAgICB9KTtcbiAgICAgIGF3YWl0IG9uTG9hZGVkKCk7XG4gICAgICBhd2FpdCB0aGlzLmxvYWRDb21wbGV0ZTtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgdGhpcy4jaXNJbml0ID0gdHJ1ZTtcbiAgICBsZXQgaWZyYW1lID0gKF9hID0gdGhpcy5zaGFkb3dSb290KSA9PSBudWxsID8gdm9pZCAwIDogX2EucXVlcnlTZWxlY3RvcihcImlmcmFtZVwiKTtcbiAgICBpZiAoaXNGaXJzdExvYWQgJiYgaWZyYW1lKSB7XG4gICAgICB0aGlzLiNjb25maWcgPSBKU09OLnBhcnNlKGlmcmFtZS5nZXRBdHRyaWJ1dGUoXCJkYXRhLWNvbmZpZ1wiKSB8fCBcInt9XCIpO1xuICAgIH1cbiAgICBpZiAoIXRoaXMuc2hhZG93Um9vdCkge1xuICAgICAgdGhpcy5hdHRhY2hTaGFkb3coeyBtb2RlOiBcIm9wZW5cIiB9KTtcbiAgICAgIHRoaXMuc2hhZG93Um9vdC5pbm5lckhUTUwgPSBnZXRUZW1wbGF0ZUhUTUwobmFtZWROb2RlTWFwVG9PYmplY3QodGhpcy5hdHRyaWJ1dGVzKSwgdGhpcyk7XG4gICAgICBpZnJhbWUgPSB0aGlzLnNoYWRvd1Jvb3QucXVlcnlTZWxlY3RvcihcImlmcmFtZVwiKTtcbiAgICB9XG4gICAgdGhpcy5hcGkgPSBuZXcgVmltZW9QbGF5ZXJBUEkoaWZyYW1lKTtcbiAgICBjb25zdCBvbmNlTG9hZGVkID0gKCkgPT4ge1xuICAgICAgdGhpcy5hcGkub2ZmKFwibG9hZGVkXCIsIG9uY2VMb2FkZWQpO1xuICAgICAgb25Mb2FkZWQoKTtcbiAgICB9O1xuICAgIHRoaXMuYXBpLm9uKFwibG9hZGVkXCIsIG9uY2VMb2FkZWQpO1xuICAgIHRoaXMuYXBpLm9uKFwiYnVmZmVyc3RhcnRcIiwgKCkgPT4ge1xuICAgICAgaWYgKHRoaXMuI3BhdXNlZCkge1xuICAgICAgICB0aGlzLiNwYXVzZWQgPSBmYWxzZTtcbiAgICAgICAgdGhpcy5kaXNwYXRjaEV2ZW50KG5ldyBFdmVudChcInBsYXlcIikpO1xuICAgICAgfVxuICAgICAgdGhpcy5kaXNwYXRjaEV2ZW50KG5ldyBFdmVudChcIndhaXRpbmdcIikpO1xuICAgIH0pO1xuICAgIHRoaXMuYXBpLm9uKFwicGxheVwiLCAoKSA9PiB7XG4gICAgICBpZiAoIXRoaXMuI3BhdXNlZCkgcmV0dXJuO1xuICAgICAgdGhpcy4jcGF1c2VkID0gZmFsc2U7XG4gICAgICB0aGlzLmRpc3BhdGNoRXZlbnQobmV3IEV2ZW50KFwicGxheVwiKSk7XG4gICAgfSk7XG4gICAgdGhpcy5hcGkub24oXCJwbGF5aW5nXCIsICgpID0+IHtcbiAgICAgIHRoaXMuI3JlYWR5U3RhdGUgPSAzO1xuICAgICAgdGhpcy4jcGF1c2VkID0gZmFsc2U7XG4gICAgICB0aGlzLmRpc3BhdGNoRXZlbnQobmV3IEV2ZW50KFwicGxheWluZ1wiKSk7XG4gICAgfSk7XG4gICAgdGhpcy5hcGkub24oXCJzZWVraW5nXCIsICgpID0+IHtcbiAgICAgIHRoaXMuI3NlZWtpbmcgPSB0cnVlO1xuICAgICAgdGhpcy5kaXNwYXRjaEV2ZW50KG5ldyBFdmVudChcInNlZWtpbmdcIikpO1xuICAgIH0pO1xuICAgIHRoaXMuYXBpLm9uKFwic2Vla2VkXCIsICgpID0+IHtcbiAgICAgIHRoaXMuI3NlZWtpbmcgPSBmYWxzZTtcbiAgICAgIHRoaXMuZGlzcGF0Y2hFdmVudChuZXcgRXZlbnQoXCJzZWVrZWRcIikpO1xuICAgIH0pO1xuICAgIHRoaXMuYXBpLm9uKFwicGF1c2VcIiwgKCkgPT4ge1xuICAgICAgdGhpcy4jcGF1c2VkID0gdHJ1ZTtcbiAgICAgIHRoaXMuZGlzcGF0Y2hFdmVudChuZXcgRXZlbnQoXCJwYXVzZVwiKSk7XG4gICAgfSk7XG4gICAgdGhpcy5hcGkub24oXCJlbmRlZFwiLCAoKSA9PiB7XG4gICAgICB0aGlzLiNwYXVzZWQgPSB0cnVlO1xuICAgICAgdGhpcy5kaXNwYXRjaEV2ZW50KG5ldyBFdmVudChcImVuZGVkXCIpKTtcbiAgICB9KTtcbiAgICB0aGlzLmFwaS5vbihcInJhdGVjaGFuZ2VcIiwgKHsgcGxheWJhY2tSYXRlIH0pID0+IHtcbiAgICAgIHRoaXMuI3BsYXliYWNrUmF0ZSA9IHBsYXliYWNrUmF0ZTtcbiAgICAgIHRoaXMuZGlzcGF0Y2hFdmVudChuZXcgRXZlbnQoXCJyYXRlY2hhbmdlXCIpKTtcbiAgICB9KTtcbiAgICB0aGlzLmFwaS5vbihcInZvbHVtZWNoYW5nZVwiLCBhc3luYyAoeyB2b2x1bWUgfSkgPT4ge1xuICAgICAgdGhpcy4jdm9sdW1lID0gdm9sdW1lO1xuICAgICAgaWYgKHRoaXMuYXBpKSB7XG4gICAgICAgIHRoaXMuI211dGVkID0gYXdhaXQgdGhpcy5hcGkuZ2V0TXV0ZWQoKTtcbiAgICAgIH1cbiAgICAgIHRoaXMuZGlzcGF0Y2hFdmVudChuZXcgRXZlbnQoXCJ2b2x1bWVjaGFuZ2VcIikpO1xuICAgIH0pO1xuICAgIHRoaXMuYXBpLm9uKFwiZHVyYXRpb25jaGFuZ2VcIiwgKHsgZHVyYXRpb24gfSkgPT4ge1xuICAgICAgdGhpcy4jZHVyYXRpb24gPSBkdXJhdGlvbjtcbiAgICAgIHRoaXMuZGlzcGF0Y2hFdmVudChuZXcgRXZlbnQoXCJkdXJhdGlvbmNoYW5nZVwiKSk7XG4gICAgfSk7XG4gICAgdGhpcy5hcGkub24oXCJ0aW1ldXBkYXRlXCIsICh7IHNlY29uZHMgfSkgPT4ge1xuICAgICAgdGhpcy4jY3VycmVudFRpbWUgPSBzZWNvbmRzO1xuICAgICAgdGhpcy5kaXNwYXRjaEV2ZW50KG5ldyBFdmVudChcInRpbWV1cGRhdGVcIikpO1xuICAgIH0pO1xuICAgIHRoaXMuYXBpLm9uKFwicHJvZ3Jlc3NcIiwgKHsgc2Vjb25kcyB9KSA9PiB7XG4gICAgICB0aGlzLiNwcm9ncmVzcyA9IHNlY29uZHM7XG4gICAgICB0aGlzLmRpc3BhdGNoRXZlbnQobmV3IEV2ZW50KFwicHJvZ3Jlc3NcIikpO1xuICAgIH0pO1xuICAgIHRoaXMuYXBpLm9uKFwicmVzaXplXCIsICh7IHZpZGVvV2lkdGgsIHZpZGVvSGVpZ2h0IH0pID0+IHtcbiAgICAgIHRoaXMuI3ZpZGVvV2lkdGggPSB2aWRlb1dpZHRoO1xuICAgICAgdGhpcy4jdmlkZW9IZWlnaHQgPSB2aWRlb0hlaWdodDtcbiAgICAgIHRoaXMuZGlzcGF0Y2hFdmVudChuZXcgRXZlbnQoXCJyZXNpemVcIikpO1xuICAgIH0pO1xuICAgIGF3YWl0IHRoaXMubG9hZENvbXBsZXRlO1xuICB9XG4gIGFzeW5jIGF0dHJpYnV0ZUNoYW5nZWRDYWxsYmFjayhhdHRyTmFtZSwgb2xkVmFsdWUsIG5ld1ZhbHVlKSB7XG4gICAgaWYgKG9sZFZhbHVlID09PSBuZXdWYWx1ZSkgcmV0dXJuO1xuICAgIHN3aXRjaCAoYXR0ck5hbWUpIHtcbiAgICAgIGNhc2UgXCJhdXRvcGxheVwiOlxuICAgICAgY2FzZSBcImNvbnRyb2xzXCI6XG4gICAgICBjYXNlIFwic3JjXCI6IHtcbiAgICAgICAgdGhpcy5sb2FkKCk7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICB9XG4gICAgYXdhaXQgdGhpcy5sb2FkQ29tcGxldGU7XG4gICAgc3dpdGNoIChhdHRyTmFtZSkge1xuICAgICAgY2FzZSBcImxvb3BcIjoge1xuICAgICAgICB0aGlzLmFwaS5zZXRMb29wKHRoaXMubG9vcCk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgIH1cbiAgfVxuICBhc3luYyBwbGF5KCkge1xuICAgIHZhciBfYTtcbiAgICB0aGlzLiNwYXVzZWQgPSBmYWxzZTtcbiAgICB0aGlzLmRpc3BhdGNoRXZlbnQobmV3IEV2ZW50KFwicGxheVwiKSk7XG4gICAgYXdhaXQgdGhpcy5sb2FkQ29tcGxldGU7XG4gICAgdHJ5IHtcbiAgICAgIGF3YWl0ICgoX2EgPSB0aGlzLmFwaSkgPT0gbnVsbCA/IHZvaWQgMCA6IF9hLnBsYXkoKSk7XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIHRoaXMuI3BhdXNlZCA9IHRydWU7XG4gICAgICB0aGlzLmRpc3BhdGNoRXZlbnQobmV3IEV2ZW50KFwicGF1c2VcIikpO1xuICAgICAgdGhyb3cgZXJyb3I7XG4gICAgfVxuICB9XG4gIGFzeW5jIHBhdXNlKCkge1xuICAgIHZhciBfYTtcbiAgICBhd2FpdCB0aGlzLmxvYWRDb21wbGV0ZTtcbiAgICByZXR1cm4gKF9hID0gdGhpcy5hcGkpID09IG51bGwgPyB2b2lkIDAgOiBfYS5wYXVzZSgpO1xuICB9XG4gIGdldCBlbmRlZCgpIHtcbiAgICByZXR1cm4gdGhpcy4jY3VycmVudFRpbWUgPj0gdGhpcy4jZHVyYXRpb247XG4gIH1cbiAgZ2V0IHNlZWtpbmcoKSB7XG4gICAgcmV0dXJuIHRoaXMuI3NlZWtpbmc7XG4gIH1cbiAgZ2V0IHJlYWR5U3RhdGUoKSB7XG4gICAgcmV0dXJuIHRoaXMuI3JlYWR5U3RhdGU7XG4gIH1cbiAgZ2V0IHZpZGVvV2lkdGgoKSB7XG4gICAgcmV0dXJuIHRoaXMuI3ZpZGVvV2lkdGg7XG4gIH1cbiAgZ2V0IHZpZGVvSGVpZ2h0KCkge1xuICAgIHJldHVybiB0aGlzLiN2aWRlb0hlaWdodDtcbiAgfVxuICBnZXQgc3JjKCkge1xuICAgIHJldHVybiB0aGlzLmdldEF0dHJpYnV0ZShcInNyY1wiKTtcbiAgfVxuICBzZXQgc3JjKHZhbCkge1xuICAgIGlmICh0aGlzLnNyYyA9PSB2YWwpIHJldHVybjtcbiAgICB0aGlzLnNldEF0dHJpYnV0ZShcInNyY1wiLCB2YWwpO1xuICB9XG4gIGdldCBwYXVzZWQoKSB7XG4gICAgcmV0dXJuIHRoaXMuI3BhdXNlZDtcbiAgfVxuICBnZXQgZHVyYXRpb24oKSB7XG4gICAgcmV0dXJuIHRoaXMuI2R1cmF0aW9uO1xuICB9XG4gIGdldCBhdXRvcGxheSgpIHtcbiAgICByZXR1cm4gdGhpcy5oYXNBdHRyaWJ1dGUoXCJhdXRvcGxheVwiKTtcbiAgfVxuICBzZXQgYXV0b3BsYXkodmFsKSB7XG4gICAgaWYgKHRoaXMuYXV0b3BsYXkgPT0gdmFsKSByZXR1cm47XG4gICAgdGhpcy50b2dnbGVBdHRyaWJ1dGUoXCJhdXRvcGxheVwiLCBCb29sZWFuKHZhbCkpO1xuICB9XG4gIGdldCBidWZmZXJlZCgpIHtcbiAgICBpZiAodGhpcy4jcHJvZ3Jlc3MgPiAwKSB7XG4gICAgICByZXR1cm4gY3JlYXRlVGltZVJhbmdlcygwLCB0aGlzLiNwcm9ncmVzcyk7XG4gICAgfVxuICAgIHJldHVybiBjcmVhdGVUaW1lUmFuZ2VzKCk7XG4gIH1cbiAgZ2V0IGNvbnRyb2xzKCkge1xuICAgIHJldHVybiB0aGlzLmhhc0F0dHJpYnV0ZShcImNvbnRyb2xzXCIpO1xuICB9XG4gIHNldCBjb250cm9scyh2YWwpIHtcbiAgICBpZiAodGhpcy5jb250cm9scyA9PSB2YWwpIHJldHVybjtcbiAgICB0aGlzLnRvZ2dsZUF0dHJpYnV0ZShcImNvbnRyb2xzXCIsIEJvb2xlYW4odmFsKSk7XG4gIH1cbiAgZ2V0IGN1cnJlbnRUaW1lKCkge1xuICAgIHJldHVybiB0aGlzLiNjdXJyZW50VGltZTtcbiAgfVxuICBzZXQgY3VycmVudFRpbWUodmFsKSB7XG4gICAgaWYgKHRoaXMuY3VycmVudFRpbWUgPT0gdmFsKSByZXR1cm47XG4gICAgdGhpcy4jY3VycmVudFRpbWUgPSB2YWw7XG4gICAgdGhpcy5sb2FkQ29tcGxldGUudGhlbigoKSA9PiB7XG4gICAgICB2YXIgX2E7XG4gICAgICAoX2EgPSB0aGlzLmFwaSkgPT0gbnVsbCA/IHZvaWQgMCA6IF9hLnNldEN1cnJlbnRUaW1lKHZhbCkuY2F0Y2goKCkgPT4ge1xuICAgICAgfSk7XG4gICAgfSk7XG4gIH1cbiAgZ2V0IGRlZmF1bHRNdXRlZCgpIHtcbiAgICByZXR1cm4gdGhpcy5oYXNBdHRyaWJ1dGUoXCJtdXRlZFwiKTtcbiAgfVxuICBzZXQgZGVmYXVsdE11dGVkKHZhbCkge1xuICAgIGlmICh0aGlzLmRlZmF1bHRNdXRlZCA9PSB2YWwpIHJldHVybjtcbiAgICB0aGlzLnRvZ2dsZUF0dHJpYnV0ZShcIm11dGVkXCIsIEJvb2xlYW4odmFsKSk7XG4gIH1cbiAgZ2V0IGxvb3AoKSB7XG4gICAgcmV0dXJuIHRoaXMuaGFzQXR0cmlidXRlKFwibG9vcFwiKTtcbiAgfVxuICBzZXQgbG9vcCh2YWwpIHtcbiAgICBpZiAodGhpcy5sb29wID09IHZhbCkgcmV0dXJuO1xuICAgIHRoaXMudG9nZ2xlQXR0cmlidXRlKFwibG9vcFwiLCBCb29sZWFuKHZhbCkpO1xuICB9XG4gIGdldCBtdXRlZCgpIHtcbiAgICByZXR1cm4gdGhpcy4jbXV0ZWQ7XG4gIH1cbiAgc2V0IG11dGVkKHZhbCkge1xuICAgIGlmICh0aGlzLm11dGVkID09IHZhbCkgcmV0dXJuO1xuICAgIHRoaXMuI211dGVkID0gdmFsO1xuICAgIHRoaXMubG9hZENvbXBsZXRlLnRoZW4oKCkgPT4ge1xuICAgICAgdmFyIF9hO1xuICAgICAgKF9hID0gdGhpcy5hcGkpID09IG51bGwgPyB2b2lkIDAgOiBfYS5zZXRNdXRlZCh2YWwpLmNhdGNoKCgpID0+IHtcbiAgICAgIH0pO1xuICAgIH0pO1xuICB9XG4gIGdldCBwbGF5YmFja1JhdGUoKSB7XG4gICAgcmV0dXJuIHRoaXMuI3BsYXliYWNrUmF0ZTtcbiAgfVxuICBzZXQgcGxheWJhY2tSYXRlKHZhbCkge1xuICAgIGlmICh0aGlzLnBsYXliYWNrUmF0ZSA9PSB2YWwpIHJldHVybjtcbiAgICB0aGlzLiNwbGF5YmFja1JhdGUgPSB2YWw7XG4gICAgdGhpcy5sb2FkQ29tcGxldGUudGhlbigoKSA9PiB7XG4gICAgICB2YXIgX2E7XG4gICAgICAoX2EgPSB0aGlzLmFwaSkgPT0gbnVsbCA/IHZvaWQgMCA6IF9hLnNldFBsYXliYWNrUmF0ZSh2YWwpLmNhdGNoKCgpID0+IHtcbiAgICAgIH0pO1xuICAgIH0pO1xuICB9XG4gIGdldCBwbGF5c0lubGluZSgpIHtcbiAgICByZXR1cm4gdGhpcy5oYXNBdHRyaWJ1dGUoXCJwbGF5c2lubGluZVwiKTtcbiAgfVxuICBzZXQgcGxheXNJbmxpbmUodmFsKSB7XG4gICAgaWYgKHRoaXMucGxheXNJbmxpbmUgPT0gdmFsKSByZXR1cm47XG4gICAgdGhpcy50b2dnbGVBdHRyaWJ1dGUoXCJwbGF5c2lubGluZVwiLCBCb29sZWFuKHZhbCkpO1xuICB9XG4gIGdldCBwb3N0ZXIoKSB7XG4gICAgcmV0dXJuIHRoaXMuZ2V0QXR0cmlidXRlKFwicG9zdGVyXCIpO1xuICB9XG4gIHNldCBwb3N0ZXIodmFsKSB7XG4gICAgaWYgKHRoaXMucG9zdGVyID09IHZhbCkgcmV0dXJuO1xuICAgIHRoaXMuc2V0QXR0cmlidXRlKFwicG9zdGVyXCIsIGAke3ZhbH1gKTtcbiAgfVxuICBnZXQgdm9sdW1lKCkge1xuICAgIHJldHVybiB0aGlzLiN2b2x1bWU7XG4gIH1cbiAgc2V0IHZvbHVtZSh2YWwpIHtcbiAgICBpZiAodGhpcy52b2x1bWUgPT0gdmFsKSByZXR1cm47XG4gICAgdGhpcy4jdm9sdW1lID0gdmFsO1xuICAgIHRoaXMubG9hZENvbXBsZXRlLnRoZW4oKCkgPT4ge1xuICAgICAgdmFyIF9hO1xuICAgICAgKF9hID0gdGhpcy5hcGkpID09IG51bGwgPyB2b2lkIDAgOiBfYS5zZXRWb2x1bWUodmFsKS5jYXRjaCgoKSA9PiB7XG4gICAgICB9KTtcbiAgICB9KTtcbiAgfVxuICAvLyBUaGlzIGlzIGEgcGF0dGVybiB0byB1cGRhdGUgcHJvcGVydHkgdmFsdWVzIHRoYXQgYXJlIHNldCBiZWZvcmVcbiAgLy8gdGhlIGN1c3RvbSBlbGVtZW50IGlzIHVwZ3JhZGVkLlxuICAvLyBodHRwczovL3dlYi5kZXYvY3VzdG9tLWVsZW1lbnRzLWJlc3QtcHJhY3RpY2VzLyNtYWtlLXByb3BlcnRpZXMtbGF6eVxuICAjdXBncmFkZVByb3BlcnR5KHByb3ApIHtcbiAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHRoaXMsIHByb3ApKSB7XG4gICAgICBjb25zdCB2YWx1ZSA9IHRoaXNbcHJvcF07XG4gICAgICBkZWxldGUgdGhpc1twcm9wXTtcbiAgICAgIHRoaXNbcHJvcF0gPSB2YWx1ZTtcbiAgICB9XG4gIH1cbn1cbmZ1bmN0aW9uIHNlcmlhbGl6ZUF0dHJpYnV0ZXMoYXR0cnMpIHtcbiAgbGV0IGh0bWwgPSBcIlwiO1xuICBmb3IgKGNvbnN0IGtleSBpbiBhdHRycykge1xuICAgIGNvbnN0IHZhbHVlID0gYXR0cnNba2V5XTtcbiAgICBpZiAodmFsdWUgPT09IFwiXCIpIGh0bWwgKz0gYCAke2VzY2FwZUh0bWwoa2V5KX1gO1xuICAgIGVsc2UgaHRtbCArPSBgICR7ZXNjYXBlSHRtbChrZXkpfT1cIiR7ZXNjYXBlSHRtbChgJHt2YWx1ZX1gKX1cImA7XG4gIH1cbiAgcmV0dXJuIGh0bWw7XG59XG5mdW5jdGlvbiBlc2NhcGVIdG1sKHN0cikge1xuICByZXR1cm4gc3RyLnJlcGxhY2UoLyYvZywgXCImYW1wO1wiKS5yZXBsYWNlKC88L2csIFwiJmx0O1wiKS5yZXBsYWNlKC8+L2csIFwiJmd0O1wiKS5yZXBsYWNlKC9cIi9nLCBcIiZxdW90O1wiKS5yZXBsYWNlKC8nL2csIFwiJmFwb3M7XCIpLnJlcGxhY2UoL2AvZywgXCImI3g2MDtcIik7XG59XG5mdW5jdGlvbiBzZXJpYWxpemUocHJvcHMpIHtcbiAgcmV0dXJuIFN0cmluZyhuZXcgVVJMU2VhcmNoUGFyYW1zKGJvb2xUb0JpbmFyeShwcm9wcykpKTtcbn1cbmZ1bmN0aW9uIGJvb2xUb0JpbmFyeShwcm9wcykge1xuICBsZXQgcCA9IHt9O1xuICBmb3IgKGxldCBrZXkgaW4gcHJvcHMpIHtcbiAgICBsZXQgdmFsID0gcHJvcHNba2V5XTtcbiAgICBpZiAodmFsID09PSB0cnVlIHx8IHZhbCA9PT0gXCJcIikgcFtrZXldID0gMTtcbiAgICBlbHNlIGlmICh2YWwgPT09IGZhbHNlKSBwW2tleV0gPSAwO1xuICAgIGVsc2UgaWYgKHZhbCAhPSBudWxsKSBwW2tleV0gPSB2YWw7XG4gIH1cbiAgcmV0dXJuIHA7XG59XG5mdW5jdGlvbiBuYW1lZE5vZGVNYXBUb09iamVjdChuYW1lZE5vZGVNYXApIHtcbiAgbGV0IG9iaiA9IHt9O1xuICBmb3IgKGxldCBhdHRyIG9mIG5hbWVkTm9kZU1hcCkge1xuICAgIG9ialthdHRyLm5hbWVdID0gYXR0ci52YWx1ZTtcbiAgfVxuICByZXR1cm4gb2JqO1xufVxuY2xhc3MgUHVibGljUHJvbWlzZSBleHRlbmRzIFByb21pc2Uge1xuICBjb25zdHJ1Y3RvcihleGVjdXRvciA9ICgpID0+IHtcbiAgfSkge1xuICAgIGxldCByZXMsIHJlajtcbiAgICBzdXBlcigocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICBleGVjdXRvcihyZXNvbHZlLCByZWplY3QpO1xuICAgICAgcmVzID0gcmVzb2x2ZTtcbiAgICAgIHJlaiA9IHJlamVjdDtcbiAgICB9KTtcbiAgICB0aGlzLnJlc29sdmUgPSByZXM7XG4gICAgdGhpcy5yZWplY3QgPSByZWo7XG4gIH1cbn1cbmZ1bmN0aW9uIGNyZWF0ZVRpbWVSYW5nZXMoc3RhcnQsIGVuZCkge1xuICBpZiAoQXJyYXkuaXNBcnJheShzdGFydCkpIHtcbiAgICByZXR1cm4gY3JlYXRlVGltZVJhbmdlc09iaihzdGFydCk7XG4gIH0gZWxzZSBpZiAoc3RhcnQgPT0gbnVsbCB8fCBlbmQgPT0gbnVsbCB8fCBzdGFydCA9PT0gMCAmJiBlbmQgPT09IDApIHtcbiAgICByZXR1cm4gY3JlYXRlVGltZVJhbmdlc09iaihbWzAsIDBdXSk7XG4gIH1cbiAgcmV0dXJuIGNyZWF0ZVRpbWVSYW5nZXNPYmooW1tzdGFydCwgZW5kXV0pO1xufVxuZnVuY3Rpb24gY3JlYXRlVGltZVJhbmdlc09iaihyYW5nZXMpIHtcbiAgT2JqZWN0LmRlZmluZVByb3BlcnRpZXMocmFuZ2VzLCB7XG4gICAgc3RhcnQ6IHtcbiAgICAgIHZhbHVlOiAoaSkgPT4gcmFuZ2VzW2ldWzBdXG4gICAgfSxcbiAgICBlbmQ6IHtcbiAgICAgIHZhbHVlOiAoaSkgPT4gcmFuZ2VzW2ldWzFdXG4gICAgfVxuICB9KTtcbiAgcmV0dXJuIHJhbmdlcztcbn1cbmlmIChnbG9iYWxUaGlzLmN1c3RvbUVsZW1lbnRzICYmICFnbG9iYWxUaGlzLmN1c3RvbUVsZW1lbnRzLmdldChcInZpbWVvLXZpZGVvXCIpKSB7XG4gIGdsb2JhbFRoaXMuY3VzdG9tRWxlbWVudHMuZGVmaW5lKFwidmltZW8tdmlkZW9cIiwgVmltZW9WaWRlb0VsZW1lbnQpO1xufVxudmFyIHZpbWVvX3ZpZGVvX2VsZW1lbnRfZGVmYXVsdCA9IFZpbWVvVmlkZW9FbGVtZW50O1xuZXhwb3J0IHtcbiAgdmltZW9fdmlkZW9fZWxlbWVudF9kZWZhdWx0IGFzIGRlZmF1bHRcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/vimeo-video-element/dist/vimeo-video-element.js\n");

/***/ })

};
;